- application
    - web server: serve files from ata disk
        - make a folder of files that will be copied
    - telnet client application

- hexdump app: should be able to pass filename through command-line params
    - should get pushed on stack?
    - or just the pointer to string passed? but that new process
      might not have access right to mirrorspace

------------ To do later -------------------------------
- networking
    - stack still needs a lot of improvements (doc/net)
    - arp_getMAC should not block.
    - udp sockets
    - dns resolution for connect()
- fat32 driver
- currently, ring3 apps can access kernel mem since kernel mem is not protected.
    lock kernel code, bios area, kernel data, IDT (read only)
    video mem, page tables
- block cache: the block cache is not multi-cpu friendly (see doc/blockcache)
    would need a test suite to handle all normal cases and concurrency cases
- serial port: can feed console like keyboard, could make a separate flush function
- IRQ sharing is inneficient: ie: rtl8139 loops trhough 32 devices and checks ISR
    should stop looping when seeing first empty device and and should check ISR faster
- kernel pages should have global flag to avoid polluting the TLB
- Possible bugs:
    -   If a process has two virt page that maps to the same phys and the thread dies,
        we will free all pages. But if we free the first mapping, then another CPU maps it
        when we arrive at the second mapping we will free it again, so other thread will lose it
    - creating more consoles than what is allowed has no error handling
- see memorymanagement in doc folder
===================== Cool stuff to try =====================
- TCP/IP, and telnet shell
- usb driver
- disk should be partitioned with MBR
    bootloader in MBR and kernerl in partition 1   
- virtualization (nested virtualization??)

======================================================================================

